# Generated by Django 5.2.6 on 2025-09-27 10:03

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0003_clearance_category_created_by_supplier_created_by_and_more'),
        ('orders', '0002_orderstatushistory_rma_rmaitem_warehouse_and_more'),
        ('supermarkets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutomationRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('trigger_event', models.CharField(choices=[('ORDER_PLACED', 'Order Placed'), ('STOCK_LOW', 'Stock Low'), ('ORDER_SHIPPED', 'Order Shipped'), ('PAYMENT_RECEIVED', 'Payment Received')], max_length=20)),
                ('trigger_conditions', models.JSONField(default=list)),
                ('actions', models.JSONField(default=list)),
                ('priority', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BundleComponent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('is_optional', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('SHOPIFY', 'Shopify'), ('AMAZON', 'Amazon'), ('EBAY', 'eBay'), ('ETSY', 'Etsy'), ('WOOCOMMERCE', 'WooCommerce'), ('MAGENTO', 'Magento'), ('DARAZ', 'Daraz'), ('POS', 'POS'), ('MANUAL', 'Manual'), ('WEBSITE', 'Website')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('credentials', models.JSONField(blank=True, default=dict)),
                ('auto_import_orders', models.BooleanField(default=True)),
                ('auto_sync_stock', models.BooleanField(default=True)),
                ('order_import_frequency', models.PositiveIntegerField(default=15)),
                ('stock_sync_frequency', models.PositiveIntegerField(default=30)),
                ('price_markup', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_status', models.CharField(choices=[('CONNECTED', 'Connected'), ('DISCONNECTED', 'Disconnected'), ('ERROR', 'Error'), ('SYNCING', 'Syncing')], default='DISCONNECTED', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChannelSyncLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('ORDER_IMPORT', 'Order Import'), ('STOCK_SYNC', 'Stock Sync'), ('PRODUCT_SYNC', 'Product Sync')], max_length=20)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('ERROR', 'Error'), ('WARNING', 'Warning')], max_length=10)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('records_processed', models.PositiveIntegerField(default=0)),
                ('records_successful', models.PositiveIntegerField(default=0)),
                ('records_failed', models.PositiveIntegerField(default=0)),
                ('duration', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourierService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('credentials', models.JSONField(blank=True, default=dict)),
                ('auto_select_service', models.BooleanField(default=False)),
                ('default_service', models.CharField(blank=True, max_length=50, null=True)),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('max_length', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('max_width', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('max_height', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourierServiceOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50)),
                ('estimated_days', models.PositiveIntegerField()),
                ('max_weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnhancedOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('external_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_info', models.JSONField(default=dict)),
                ('shipping_info', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PROCESSING', 'Processing'), ('SHIPPED', 'Shipped'), ('DELIVERED', 'Delivered'), ('RETURNED', 'Returned'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=12)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('REFUNDED', 'Refunded'), ('FAILED', 'Failed'), ('PARTIAL', 'Partial')], default='PENDING', max_length=10)),
                ('fulfillment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('SHIPPED', 'Shipped'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed')], default='PENDING', max_length=12)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('courier_service', models.CharField(blank=True, max_length=50, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_label_url', models.URLField(blank=True, null=True)),
                ('tags', models.JSONField(default=list)),
                ('notes', models.TextField(blank=True, null=True)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('automation_rules_applied', models.JSONField(default=list)),
                ('placed_at', models.DateTimeField()),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-placed_at'],
            },
        ),
        migrations.CreateModel(
            name='EnhancedOrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sku', models.CharField(max_length=100)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('bundle_components', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RESERVED', 'Reserved'), ('ALLOCATED', 'Allocated'), ('PICKED', 'Picked'), ('PACKED', 'Packed'), ('SHIPPED', 'Shipped')], default='PENDING', max_length=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductBundle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SKUMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('internal_sku', models.CharField(max_length=100)),
                ('channel_sku', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('price_override', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('stock_override', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockLevel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('available', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('reserved', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('on_order', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('allocated', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('damaged', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('reorder_point', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_stock', models.IntegerField(default=1000, validators=[django.core.validators.MinValueValidator(1)])),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('FULFILLED', 'Fulfilled'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired')], default='ACTIVE', max_length=20)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='warehouse',
            name='code',
            field=models.CharField(default='MAIN', max_length=20),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='contact_person',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='current_utilization',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='is_default',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='max_capacity',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='phone',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='priority',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterUniqueTogether(
            name='warehouse',
            unique_together={('supermarket', 'code')},
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['is_active'], name='orders_ware_is_acti_d21cf3_idx'),
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['is_default'], name='orders_ware_is_defa_56d5f6_idx'),
        ),
        migrations.AddField(
            model_name='automationrule',
            name='supermarket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_rules', to='supermarkets.supermarket'),
        ),
        migrations.AddField(
            model_name='bundlecomponent',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bundle_components', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='channel',
            name='default_warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.warehouse'),
        ),
        migrations.AddField(
            model_name='channel',
            name='supermarket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='supermarkets.supermarket'),
        ),
        migrations.AddField(
            model_name='channelsynclog',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='orders.channel'),
        ),
        migrations.AddField(
            model_name='courierservice',
            name='supermarket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courier_services', to='supermarkets.supermarket'),
        ),
        migrations.AddField(
            model_name='courierserviceoption',
            name='courier_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_options', to='orders.courierservice'),
        ),
        migrations.AddField(
            model_name='enhancedorder',
            name='assigned_warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.warehouse'),
        ),
        migrations.AddField(
            model_name='enhancedorder',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='orders.channel'),
        ),
        migrations.AddField(
            model_name='enhancedorder',
            name='supermarket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enhanced_orders', to='supermarkets.supermarket'),
        ),
        migrations.AddField(
            model_name='enhancedorderitem',
            name='allocated_warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.warehouse'),
        ),
        migrations.AddField(
            model_name='enhancedorderitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.enhancedorder'),
        ),
        migrations.AddField(
            model_name='enhancedorderitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enhanced_order_items', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='productbundle',
            name='supermarket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bundles', to='supermarkets.supermarket'),
        ),
        migrations.AddField(
            model_name='enhancedorderitem',
            name='bundle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.productbundle'),
        ),
        migrations.AddField(
            model_name='bundlecomponent',
            name='bundle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='orders.productbundle'),
        ),
        migrations.AddField(
            model_name='skumapping',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sku_mappings', to='orders.channel'),
        ),
        migrations.AddField(
            model_name='skumapping',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sku_mappings', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='stocklevel',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_levels', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='stocklevel',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_levels', to='orders.warehouse'),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_reservations', to='orders.order'),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_reservations', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_reservations', to='orders.warehouse'),
        ),
        migrations.AddField(
            model_name='enhancedorderitem',
            name='reservation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.stockreservation'),
        ),
        migrations.AddIndex(
            model_name='automationrule',
            index=models.Index(fields=['supermarket'], name='orders_auto_superma_efa4d4_idx'),
        ),
        migrations.AddIndex(
            model_name='automationrule',
            index=models.Index(fields=['trigger_event'], name='orders_auto_trigger_dfad37_idx'),
        ),
        migrations.AddIndex(
            model_name='automationrule',
            index=models.Index(fields=['is_active'], name='orders_auto_is_acti_25a5e8_idx'),
        ),
        migrations.AddIndex(
            model_name='automationrule',
            index=models.Index(fields=['priority'], name='orders_auto_priorit_a0b797_idx'),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['supermarket', 'type'], name='orders_chan_superma_ffa6ed_idx'),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['is_active'], name='orders_chan_is_acti_260c4c_idx'),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['sync_status'], name='orders_chan_sync_st_c1b395_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='channel',
            unique_together={('supermarket', 'name', 'type')},
        ),
        migrations.AddIndex(
            model_name='channelsynclog',
            index=models.Index(fields=['channel'], name='orders_chan_channel_9333de_idx'),
        ),
        migrations.AddIndex(
            model_name='channelsynclog',
            index=models.Index(fields=['type'], name='orders_chan_type_a9c683_idx'),
        ),
        migrations.AddIndex(
            model_name='channelsynclog',
            index=models.Index(fields=['status'], name='orders_chan_status_fcd653_idx'),
        ),
        migrations.AddIndex(
            model_name='channelsynclog',
            index=models.Index(fields=['created_at'], name='orders_chan_created_c2de84_idx'),
        ),
        migrations.AddIndex(
            model_name='courierservice',
            index=models.Index(fields=['supermarket'], name='orders_cour_superma_2e4ca1_idx'),
        ),
        migrations.AddIndex(
            model_name='courierservice',
            index=models.Index(fields=['is_active'], name='orders_cour_is_acti_35d69c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='courierservice',
            unique_together={('supermarket', 'code')},
        ),
        migrations.AddIndex(
            model_name='courierserviceoption',
            index=models.Index(fields=['courier_service'], name='orders_cour_courier_98bcc7_idx'),
        ),
        migrations.AddIndex(
            model_name='courierserviceoption',
            index=models.Index(fields=['is_active'], name='orders_cour_is_acti_5b2881_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='courierserviceoption',
            unique_together={('courier_service', 'code')},
        ),
        migrations.AddIndex(
            model_name='enhancedorder',
            index=models.Index(fields=['supermarket'], name='orders_enha_superma_c5ad51_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorder',
            index=models.Index(fields=['channel'], name='orders_enha_channel_932d14_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorder',
            index=models.Index(fields=['status'], name='orders_enha_status_c97a91_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorder',
            index=models.Index(fields=['payment_status'], name='orders_enha_payment_d7e3ba_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorder',
            index=models.Index(fields=['fulfillment_status'], name='orders_enha_fulfill_174f79_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorder',
            index=models.Index(fields=['placed_at'], name='orders_enha_placed__314b78_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorder',
            index=models.Index(fields=['order_number'], name='orders_enha_order_n_10f6ae_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorder',
            index=models.Index(fields=['external_order_id'], name='orders_enha_externa_98a6b0_idx'),
        ),
        migrations.AddIndex(
            model_name='productbundle',
            index=models.Index(fields=['supermarket'], name='orders_prod_superma_5bdbb1_idx'),
        ),
        migrations.AddIndex(
            model_name='productbundle',
            index=models.Index(fields=['sku'], name='orders_prod_sku_3920b0_idx'),
        ),
        migrations.AddIndex(
            model_name='productbundle',
            index=models.Index(fields=['is_active'], name='orders_prod_is_acti_67d5c5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productbundle',
            unique_together={('supermarket', 'sku')},
        ),
        migrations.AddIndex(
            model_name='bundlecomponent',
            index=models.Index(fields=['bundle'], name='orders_bund_bundle__3107bc_idx'),
        ),
        migrations.AddIndex(
            model_name='bundlecomponent',
            index=models.Index(fields=['product'], name='orders_bund_product_a99ef2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bundlecomponent',
            unique_together={('bundle', 'product')},
        ),
        migrations.AddIndex(
            model_name='skumapping',
            index=models.Index(fields=['product', 'channel'], name='orders_skum_product_5166fa_idx'),
        ),
        migrations.AddIndex(
            model_name='skumapping',
            index=models.Index(fields=['internal_sku'], name='orders_skum_interna_09458d_idx'),
        ),
        migrations.AddIndex(
            model_name='skumapping',
            index=models.Index(fields=['channel_sku'], name='orders_skum_channel_6017c7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='skumapping',
            unique_together={('channel', 'channel_sku')},
        ),
        migrations.AddIndex(
            model_name='stocklevel',
            index=models.Index(fields=['product'], name='orders_stoc_product_3c6ff4_idx'),
        ),
        migrations.AddIndex(
            model_name='stocklevel',
            index=models.Index(fields=['warehouse'], name='orders_stoc_warehou_80f791_idx'),
        ),
        migrations.AddIndex(
            model_name='stocklevel',
            index=models.Index(fields=['available'], name='orders_stoc_availab_fc7d5a_idx'),
        ),
        migrations.AddIndex(
            model_name='stocklevel',
            index=models.Index(fields=['reorder_point'], name='orders_stoc_reorder_144816_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stocklevel',
            unique_together={('product', 'warehouse')},
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['order'], name='orders_stoc_order_i_8fa515_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['product', 'warehouse'], name='orders_stoc_product_d42e60_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['status'], name='orders_stoc_status_0e921a_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['expires_at'], name='orders_stoc_expires_f55a9e_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorderitem',
            index=models.Index(fields=['order'], name='orders_enha_order_i_02b29f_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorderitem',
            index=models.Index(fields=['product'], name='orders_enha_product_bf05f8_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorderitem',
            index=models.Index(fields=['sku'], name='orders_enha_sku_6c55b4_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedorderitem',
            index=models.Index(fields=['status'], name='orders_enha_status_b744b1_idx'),
        ),
    ]
