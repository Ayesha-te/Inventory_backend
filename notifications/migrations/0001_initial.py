# Generated by Django 4.2.23 on 2025-08-19 15:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('supermarkets', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reminder_type', models.CharField(choices=[('EXPIRY', 'Product Expiry'), ('LOW_STOCK', 'Low Stock Alert'), ('REORDER', 'Reorder Point'), ('CUSTOM', 'Custom Reminder'), ('MAINTENANCE', 'System Maintenance'), ('REPORT', 'Report Generation')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('related_object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('remind_at', models.DateTimeField()),
                ('target_date', models.DateTimeField(blank=True, null=True)),
                ('days_before', models.IntegerField(default=30)),
                ('frequency', models.CharField(choices=[('ONCE', 'One Time'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('YEARLY', 'Yearly')], default='ONCE', max_length=20)),
                ('is_recurring', models.BooleanField(default=False)),
                ('next_reminder', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('FAILED', 'Failed')], default='ACTIVE', max_length=20)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, max_length=100, null=True)),
                ('send_email', models.BooleanField(default=True)),
                ('email_subject', models.CharField(blank=True, max_length=255, null=True)),
                ('email_body', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supermarket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='supermarkets.supermarket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReminderLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('SKIPPED', 'Skipped')], max_length=20)),
                ('email_sent', models.BooleanField(default=False)),
                ('email_recipient', models.EmailField(blank=True, max_length=254, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, max_length=100, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('reminder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.reminder')),
            ],
            options={
                'ordering': ['-executed_at'],
            },
        ),
        migrations.CreateModel(
            name='PushNotificationDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(choices=[('WEB', 'Web Browser'), ('ANDROID', 'Android'), ('IOS', 'iOS')], max_length=20)),
                ('device_token', models.TextField(unique=True)),
                ('device_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('notification_type', models.CharField(choices=[('LOW_STOCK', 'Low Stock Alert'), ('EXPIRY', 'Expiry Alert'), ('OUT_OF_STOCK', 'Out of Stock'), ('POS_SYNC', 'POS Sync Update'), ('REPORT_READY', 'Report Ready'), ('FILE_PROCESSED', 'File Processed'), ('SYSTEM', 'System Notification'), ('WELCOME', 'Welcome Message'), ('SUBSCRIPTION', 'Subscription Update')], max_length=20)),
                ('title_template', models.CharField(max_length=255)),
                ('message_template', models.TextField()),
                ('email_subject_template', models.CharField(blank=True, max_length=255, null=True)),
                ('email_body_template', models.TextField(blank=True, null=True)),
                ('default_priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('default_send_email', models.BooleanField(default=False)),
                ('default_send_push', models.BooleanField(default=True)),
                ('default_send_sms', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('name', 'notification_type')},
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('low_stock_alerts', models.BooleanField(default=True)),
                ('expiry_alerts', models.BooleanField(default=True)),
                ('out_of_stock_alerts', models.BooleanField(default=True)),
                ('pos_sync_alerts', models.BooleanField(default=True)),
                ('report_alerts', models.BooleanField(default=True)),
                ('file_processing_alerts', models.BooleanField(default=True)),
                ('system_alerts', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('digest_frequency', models.CharField(choices=[('IMMEDIATE', 'Immediate'), ('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly')], default='IMMEDIATE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationDigest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digest_type', models.CharField(choices=[('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly')], max_length=20)),
                ('subject', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('notification_count', models.IntegerField(default=0)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_digests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('LOW_STOCK', 'Low Stock Alert'), ('EXPIRY', 'Expiry Alert'), ('OUT_OF_STOCK', 'Out of Stock'), ('POS_SYNC', 'POS Sync Update'), ('REPORT_READY', 'Report Ready'), ('FILE_PROCESSED', 'File Processed'), ('SYSTEM', 'System Notification'), ('WELCOME', 'Welcome Message'), ('SUBSCRIPTION', 'Subscription Update')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('related_object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('action_url', models.CharField(blank=True, max_length=500, null=True)),
                ('action_data', models.JSONField(blank=True, default=dict)),
                ('is_read', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('send_email', models.BooleanField(default=False)),
                ('send_push', models.BooleanField(default=True)),
                ('send_sms', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('supermarket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='supermarkets.supermarket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed'), ('BOUNCED', 'Bounced')], default='PENDING', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_notification', to='notifications.notification')),
            ],
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['user', 'status'], name='notificatio_user_id_4e47fa_idx'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['reminder_type', 'remind_at'], name='notificatio_reminde_bed119_idx'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['status', 'remind_at'], name='notificatio_status_af9ebe_idx'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['task_id'], name='notificatio_task_id_f2fb67_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pushnotificationdevice',
            unique_together={('user', 'device_token')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='notificatio_user_id_427e4b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_f2e0f7_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'created_at'], name='notificatio_priorit_f7c359_idx'),
        ),
    ]
